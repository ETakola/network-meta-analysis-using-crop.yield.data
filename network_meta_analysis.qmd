---
title: "Network Meta-analysis in Ecology"
format: html
editor: visual
---

```{r install & load packages}
#| echo: true
#| message: false
#| warning: false
#| 
list_of_packages<-c("meta", "netmeta", "readxl", "mvtnorm","sf","ggplot2", "rnaturalearth","rnaturalearthdata")
usePackage <- function(list_of_packages) {
  # Iterate through each package in the list
  for (i in seq_along(list_of_packages)) {
    # Check if the package is installed
    if (!is.element(list_of_packages[i], installed.packages()[, 1])) {
      print(paste('Package:', list_of_packages[i], 'Not found, Installing Now...'))
      install.packages(list_of_packages[i], dependencies = TRUE)
    }
    # Load the package
    print(paste('Loading Package:', list_of_packages[i]))
    require(list_of_packages[i], character.only = TRUE)
  }
}

usePackage(list_of_packages)
```

## Data description

```{r load the data}
yield_data <- readRDS(here::here("data/yield_data.RDS"))
```

We searched the database used in Takola et al. (unpublished) to identify published trials of interventions applied in the production of various crop yields. We compiled a dataset of meta-analytical studies that investigated the response of yield production against an agricultural intervention. These strategies ranged from; straw return, liming, super absorbent polymers, alternative fertilization options, substitution of mineral fertilizers with manure nitrogen, removal of topsoil, etc. are among some of the most common agricultural management strategies for balancing yield increase. Our initial dataset (from Takola et al., unpublished) consisted of 11 meta-analytical studies, with 13 interventions and 8814 yield data. The study information extracted includes (i) study identifiers (e.g. title, abstract, authors, publication year); (ii) study characteristics (e.g. trial design, study location); (iii) participant characteristics (e.g. sample size, standard deviation); (iv) intervention details; and (v) outcome data (e.g. effect sizes of intervention and control). Our primary outcome of interest was yield production measured in kilogram per hectare (kg/ha).

### Inclusion criteria

To help ensure consistency in our analysis, we defined a set of criteria to screen out irrelevant studies. Thus we only included studies that (i) were randomized controlled trials (ii) were paired i.e., compared an active intervention with a control (iii) had no missing data e.g. SD, sample size (n), effect sizes, etc. (iv) used interventions not applied as a second-line treatment. After applying our selection criteria, we extracted data from 3 meta-analytical studies of interest. These studies comprising of 3733 yield data met all inclusion criteria and were then used for the network meta-analysis.

```{r map of studies}

world <- ne_countries(scale = "medium", returnclass = "sf")

my_sf <- st_as_sf(yield_data, coords = c('pr_Longitude', 'pr_Latitude'),crs = 4326)

#Plot it:
ggplot(data = world) +
    geom_sf() +
    geom_sf(data = my_sf, size = 4, shape = 23, fill = "darkred") +
    coord_sf()

```

## Network Meta-analysis

### Something about NMA

### NMA in R

Using the dataset above we show below how to do a NMA

```{r set the meta settings}
settings.meta(digits = 2, digits.se = 3, common = FALSE)
```

First we need to transform data into the input format (contrast-based format) for `netmeta` using `pairwise()` function

This step is also used to estimate treatment effects and corresponding standard errors.

Additionally, we use the `pairwise()` function to organise the data and calculate pairwise comparisons

```{r pairwise comparisions}
p1 <- pairwise(treat = list(pr_Treatment, pr_control), n = list(n_treatment, n_control), mean = list(pr_yield_treatm_kgha, pr_yield_control_kgha), sd = list(treatment_SD, control_SD), studylab = "Source", data = yield_data, sm="SMD") 
##ARGUMENTS. 1=, 2=sample size or list of sample sizes, 3=treatment means or a list of treatment means, 4=standard deviations (SD) or a list of the standard deviations, 5=study labels, 6=dataset, and 7=summary measure in this case "SMD" (Standardized mean differences).

p1
```

#### Pairwise results

The R object `p1` is a data frame with 3939 rows, each corresponding to a pairwise comparison (3938 rows from 3938 two-arm studies), and 32 columns (variables). The first two variables contain the mean differences (TE) and corresponding standard errors (seTE) of the pairwise comparison defined by variables treat1 and treat2.

#### Performing the main analysis - A standard NMA 

```{r NMA1}
net1 <- netmeta(p1, common = FALSE, reference.group = "Control") 
net2 <- netmeta(TE, seTE, treat1, treat2, studlab, data = p1, common = FALSE, ref = "Control") 
net1 
net2
```

#### NMA results

Printing the R object `net1` shows the main NMA results. It starts with a concise summary of the network showing:

1.  `k` which is the number of independent studies. `k` simultaneously corresponds to `m` when there are only two-arm studies in our network; otherwise `m` is greater than `k` if at least one study evaluates more than two treatments.

2.  `m` which is the number of pairwise comparisons each study contributes to the network. The sum of all pairwise comparisons across studies in our network denoted as `m`= 3732.

3.  Which is the number of observations

4.  `n` which is the number of treatments of interest in our network (also called nodes or vertices) (n=4).

5.  And `d` which is the number of designs.

    ```{r}
    head(summary(net1), nma = FALSE) 
    print(summary(net1), nchar.trts = 4, nma = FALSE) 
    print(summary(net1), truncate = studlab %in% selstudy1, nchar.trts = 4, + nma = FALSE) # network estimates under the random effects model
    ```

```{r}
netconnection(p1) 
```

The function `netconnection()` is used to obtain information on the network structure. It is also used to determine whether a given network is fully connected or consists of sub-networks. In a disconnected network, the use of `netmeta()` will result in an error with a recommendation to use `netconnection()` for further information.

#### Present the results

Presenting the results consists of 4 steps:

1.  Visualizing the evidence

2.  Visualizing treatment effects

3.  Ranking the treatments

4.  Graphically visualizing the evidence

This is done by constructing a network graph (`netgraph()`) in order to get an overview of the network structure

```{r network graph}
netgraph(net1, points = TRUE, cex.points = 7, adj = 0.5) netgraph(net1, number.of.studies = TRUE, seq = "optimal", points = TRUE, offset = 0.03, cex.points = 7, adj = 0.5, cex = 1.5)
```

```{r network graph2}
netgraph(net1, number.of.studies = TRUE) #number.of.studies = TRUE makes the number blurry
#lwd = 2: allows the width of each line to correspond to the number of studies 
```

#### Network graph

In the network graph, each treatment is represented by a point (node) in the plane furthermore, treatments are connected by a line (edge), if at least one direct pairwise comparison exists.

Our graph also visualizes the number of studies contributing to each pairwise comparison, the thickness of the edges (line) are proportional to the number of studies directly comparing treatments.

#### Visualizing the treatment effects 

Drawing a forest plot for network meta-analysis helps to summarize results

```{r forest plot}
forest(net1, reference.group = "Control", drop.reference.group = TRUE, label.left = "Favours second intervention", label.right = "Favours first intervention") forest(netsplit(net1, order = NULL), show = "all", text.overall = "Mixed treatment estimate") forest(net1) # Forest plot with Control as reference 
forest(net1, ref = c("L", "Straw return", "Super Absorbent Polymer (SAP)"), baseline = FALSE, drop = TRUE) # Forest plot with an active treatment versus all other treatments
```

#### league table 

```{r}
netleague(net1)
```

#### Ranking the treatments

Ranking of the treatments evaluated in an NMA provides additional information on the merits of individual treatments

```{r netrank}
netrank(net1) #Results / what do we see # what we see is a treatment ranking using P-scores
```

```{r}
rankogram(net1)
```

The `rankogram()` shows a more detailed picture of the treatment hierarchy given by the rankograms for the competing treatments

Control has 100% estimated probability of producing the best value compared to only 0% for the other active treatments.

```{r plot rankogram}
plot(rankogram(net1))

netrank(rankogram(net1)) 
```

Here we see SUCRA values for our NMA

```{r League table sorted by decreasing P-scores }
netleague(net1, seq = netrank(net1), ci = FALSE)
```

#### Evaluation of Heterogeneity. T

The decomposition of the overall Q statistic to assess heterogeneity and inconsistency

```{r decomp}
decomp.design(net1)
```

The design-specific decomposition of QW shows that the within-design heterogeneity can largely be traced back to the comparison of Control versus Straw return and Control versus Liming.

Results for detaching single designs and the full design-by-treatment interaction model do not show evidence of inconsistency between designs.

#### Evaluation of inconsistency 

The comparison of direct and indirect evidence for each pairwise comparison.

```{r inconsist}
netsplit(net1) 
netheat(net1)
```

#### Evaluation of funnel plot assymetry 

```{r funnel}
funnel()
```

#### Summary 

Based on the results of the tests for heterogeneity and inconsistency, we observe that there is significant variation among studies (this is supported by the high value of IÂ² and the significance of the Q value.

Given this, we performed the following recommended steps:

##### Investigating sources of Heterogeneity: 

With the use of (i) Subgroup Analysis, we conducted analyses within subgroups of studies to explore whether certain study characteristics would account for the observed heterogeneity, (ii) Meta-regression techniques to identify factors that might explain the variability in effect sizes across studies

##### SUBGROUP ANALYSIS 

```{r subgroup}
# head(p1) 
# list(p1) 
# dim(p1) 
# str(p1) 
# summary(p1) 
# class(p1) 
p1$DatasetID <- as.factor(p1$DatasetID) 
p1$pr_Croptype <- as.factor(p1$pr_Croptype) #for a subgroup analysis, we decided on using the different croptypes as a study characteristic 
subgroup_results <- netmeta(TE, seTE, treat1, treat2, studlab, data = p1, common = FALSE, ref = "Control", byvar = p1$pr_Croptype)

```

```{r Summary of results}
summary(subgroup_results)
```

#### Forest plot for visualizing subgroup analysis

```{r forest}
forest(subgroup_results)
```
